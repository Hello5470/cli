name: Release
on:
  push:
    tags:
      - "v*"

env:
  MACOSX_DEPLOYMENT_TARGET: 10.7

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Get tag data
        id: tag
        run: |
          echo ::set-output name=name::${GITHUB_REF#refs/*/}
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-[0-9]+$ ]]; then
            echo ::set-output name=pre_release::true
          fi
      - name: Create new release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ steps.tag.outputs.pre_release == 'true' }}
          title: "Version: ${{ steps.tag.outputs.name }}"

  build-release:
    name: Build Release Assets
    needs: ["create-release"]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            platform: x86_64-Linux

          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            platform: i686-Linux

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            platform: aarch64-Linux

          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            platform: arm7-Linux

          - target: x86_64-apple-darwin
            os: macOS-latest
            platform: x86_64-Darwin

          - target: aarch64-apple-darwin
            os: macOS-latest
            platform: aarch64-Darwin

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            platform: x86_64-Windows

          - target: i686-pc-windows-msvc
            os: windows-latest
            platform: i686-Windows

          # ARM WINDOWS xD
          # - target: aarch64-pc-windows-msvc
          #   os: windows-latest
          #   platform: aarch64-windows

          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
            platform: x86_64-FreeBSD

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Prepare binaries [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip hop.exe
          7z a ../../../hop-${{ matrix.platform }}.zip hop.exe
          cd -

      - name: Prepare binaries [*nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip hop || true
          tar czvf ../../../hop-${{ matrix.platform }}.tar.gz hop
          cd -

      - name: Upload release archive
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.create-release.outputs.tag }}
          files: hop-${{ matrix.platform }}*
